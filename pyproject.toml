[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "chaostoolkit-aws-mcp-server"
version = "0.1.0"
description = "MCP Server for Chaos Toolkit AWS experiments"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
license = {text = "Apache-2.0"}
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "mcp>=1.0.0",
    "chaostoolkit>=1.0.0",
    "chaostoolkit-aws>=0.21.0",
    "aws-az-failure-chaostoolkit>=1.0.0",
    "boto3>=1.26.0",
    "pydantic>=2.0.0",
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
]

[project.optional-dependencies]
dev = [
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]

[project.scripts]
chaostoolkit-aws-mcp-server = "chaostoolkit_aws_mcp_server.server:main"

[tool.hatch.build.targets.wheel]
packages = ["src/chaostoolkit_aws_mcp_server"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --strict-config"

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]
ignore = []

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
